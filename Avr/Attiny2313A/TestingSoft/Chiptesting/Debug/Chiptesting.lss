
Chiptesting.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000064  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000b8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000b8  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000000e8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000128  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000005d7  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000052e  00000000  00000000  00000737  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000305  00000000  00000000  00000c65  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00000f6c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000350  00000000  00000000  00000fc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000000b4  00000000  00000000  00001310  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000013c4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>
  26:	07 c0       	rjmp	.+14     	; 0x36 <__bad_interrupt>
  28:	06 c0       	rjmp	.+12     	; 0x36 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf ed       	ldi	r28, 0xDF	; 223
  30:	cd bf       	out	0x3d, r28	; 61
  32:	0c d0       	rcall	.+24     	; 0x4c <main>
  34:	15 c0       	rjmp	.+42     	; 0x60 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <init_pwm>:
		}
		while(~PIND & (1<<PD3)){
            PORTB =~1;
		}
		
		PORTB=0xFF;
  38:	87 b3       	in	r24, 0x17	; 23
  3a:	84 60       	ori	r24, 0x04	; 4
  3c:	87 bb       	out	0x17, r24	; 23
  3e:	81 e8       	ldi	r24, 0x81	; 129
  40:	80 bf       	out	0x30, r24	; 48
  42:	80 e1       	ldi	r24, 0x10	; 16
  44:	86 bf       	out	0x36, r24	; 54
  46:	82 e0       	ldi	r24, 0x02	; 2
  48:	83 bf       	out	0x33, r24	; 51
  4a:	08 95       	ret

0000004c <main>:
	// 	}
	// 	PORTB=0xff;
	// }
	    
		
	init_pwm();
  4c:	f5 df       	rcall	.-22     	; 0x38 <init_pwm>
	DDRD=~((1<<PD2)|(1<<PD3));
  4e:	83 ef       	ldi	r24, 0xF3	; 243
  50:	81 bb       	out	0x11, r24	; 17
	PORTD=0xff;
  52:	8f ef       	ldi	r24, 0xFF	; 255
  54:	82 bb       	out	0x12, r24	; 18
	int dimmer = 0;
  56:	80 e0       	ldi	r24, 0x00	; 0
    while(1){
		if(~PIND & (1<<PD2)) {
  58:	82 9b       	sbis	0x10, 2	; 16

			dimmer = 250;
  5a:	8a ef       	ldi	r24, 0xFA	; 250
		// 	DDRB |= (1<<PB4);
		// 	OCR0A  = i;
		// 	_delay_ms(10);
		// }
		// DDRB |= (0<<PB4);
	OCR0A  = dimmer;
  5c:	86 bf       	out	0x36, r24	; 54
	}
  5e:	fc cf       	rjmp	.-8      	; 0x58 <main+0xc>

00000060 <_exit>:
  60:	f8 94       	cli

00000062 <__stop_program>:
  62:	ff cf       	rjmp	.-2      	; 0x62 <__stop_program>
